'------------------------------------------------------------------------------
' <auto-generated>
'     Este código se generó a partir de una plantilla.
'
'     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
'     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.Data.Entity
Imports System.Data.Entity.Infrastructure
Imports System.Data.Entity.Core.Objects
Imports System.Linq

Partial Public Class ApexEntities
    Inherits DbContext

    Public Sub New()
        MyBase.New("name=ApexEntities")
    End Sub

    Protected Overrides Sub OnModelCreating(modelBuilder As DbModelBuilder)
        Throw New UnintentionalCodeFirstException()
    End Sub

    Public Overridable Property AreaTrabajo() As DbSet(Of AreaTrabajo)
    Public Overridable Property Arma() As DbSet(Of Arma)
    Public Overridable Property AuditoriaCambios() As DbSet(Of AuditoriaCambios)
    Public Overridable Property BajaDeFuncionarioDetalle() As DbSet(Of BajaDeFuncionarioDetalle)
    Public Overridable Property CambioDeCargoDetalle() As DbSet(Of CambioDeCargoDetalle)
    Public Overridable Property Cargo() As DbSet(Of Cargo)
    Public Overridable Property CategoriaAusencia() As DbSet(Of CategoriaAusencia)
    Public Overridable Property DesarmadoDetalle() As DbSet(Of DesarmadoDetalle)
    Public Overridable Property DesignacionDetalle() As DbSet(Of DesignacionDetalle)
    Public Overridable Property DotacionItem() As DbSet(Of DotacionItem)
    Public Overridable Property EnfermedadDetalle() As DbSet(Of EnfermedadDetalle)
    Public Overridable Property Escalafon() As DbSet(Of Escalafon)
    Public Overridable Property Estado() As DbSet(Of Estado)
    Public Overridable Property EstadoCivil() As DbSet(Of EstadoCivil)
    Public Overridable Property EstadoTransitorio() As DbSet(Of EstadoTransitorio)
    Public Overridable Property EstadoTransitorioAdjunto() As DbSet(Of EstadoTransitorioAdjunto)
    Public Overridable Property Funcion() As DbSet(Of Funcion)
    Public Overridable Property Funcionario() As DbSet(Of Funcionario)
    Public Overridable Property FuncionarioArma() As DbSet(Of FuncionarioArma)
    Public Overridable Property FuncionarioChaleco() As DbSet(Of FuncionarioChaleco)
    Public Overridable Property FuncionarioDispositivo() As DbSet(Of FuncionarioDispositivo)
    Public Overridable Property FuncionarioDotacion() As DbSet(Of FuncionarioDotacion)
    Public Overridable Property FuncionarioEstadoLegal() As DbSet(Of FuncionarioEstadoLegal)
    Public Overridable Property FuncionarioFotoHistorico() As DbSet(Of FuncionarioFotoHistorico)
    Public Overridable Property FuncionarioSalud() As DbSet(Of FuncionarioSalud)
    Public Overridable Property Genero() As DbSet(Of Genero)
    Public Overridable Property HistoricoCustodia() As DbSet(Of HistoricoCustodia)
    Public Overridable Property HistoricoLicencia() As DbSet(Of HistoricoLicencia)
    Public Overridable Property HistoricoNocturnidad() As DbSet(Of HistoricoNocturnidad)
    Public Overridable Property HistoricoPresentismo() As DbSet(Of HistoricoPresentismo)
    Public Overridable Property HistoricoViatico() As DbSet(Of HistoricoViatico)
    Public Overridable Property Horario() As DbSet(Of Horario)
    Public Overridable Property InicioDeProcesamientoDetalle() As DbSet(Of InicioDeProcesamientoDetalle)
    Public Overridable Property MapPoliciaFunc() As DbSet(Of MapPoliciaFunc)
    Public Overridable Property NivelEstudio() As DbSet(Of NivelEstudio)
    Public Overridable Property Nomenclatura() As DbSet(Of Nomenclatura)
    Public Overridable Property NotificacionEstado() As DbSet(Of NotificacionEstado)
    Public Overridable Property NotificacionPersonal() As DbSet(Of NotificacionPersonal)
    Public Overridable Property Novedad() As DbSet(Of Novedad)
    Public Overridable Property NovedadFoto() As DbSet(Of NovedadFoto)
    Public Overridable Property NovedadFuncionario() As DbSet(Of NovedadFuncionario)
    Public Overridable Property NovedadGenerada() As DbSet(Of NovedadGenerada)
    Public Overridable Property OrdenCincoDetalle() As DbSet(Of OrdenCincoDetalle)
    Public Overridable Property PrestadorSalud() As DbSet(Of PrestadorSalud)
    Public Overridable Property ProcesadoDetalle() As DbSet(Of ProcesadoDetalle)
    Public Overridable Property PuestoTrabajo() As DbSet(Of PuestoTrabajo)
    Public Overridable Property ReactivacionDeFuncionarioDetalle() As DbSet(Of ReactivacionDeFuncionarioDetalle)
    Public Overridable Property RegimenAlternancia() As DbSet(Of RegimenAlternancia)
    Public Overridable Property RegimenDetalle() As DbSet(Of RegimenDetalle)
    Public Overridable Property RegimenTrabajo() As DbSet(Of RegimenTrabajo)
    Public Overridable Property RegistroActividad() As DbSet(Of RegistroActividad)
    Public Overridable Property RetenDetalle() As DbSet(Of RetenDetalle)
    Public Overridable Property Rol() As DbSet(Of Rol)
    Public Overridable Property SancionDetalle() As DbSet(Of SancionDetalle)
    Public Overridable Property Seccion() As DbSet(Of Seccion)
    Public Overridable Property Semana() As DbSet(Of Semana)
    Public Overridable Property SeparacionDelCargoDetalle() As DbSet(Of SeparacionDelCargoDetalle)
    Public Overridable Property SubDireccion() As DbSet(Of SubDireccion)
    Public Overridable Property SubEscalafon() As DbSet(Of SubEscalafon)
    Public Overridable Property SumarioDetalle() As DbSet(Of SumarioDetalle)
    Public Overridable Property sysdiagrams() As DbSet(Of sysdiagrams)
    Public Overridable Property TipoEstadoTransitorio() As DbSet(Of TipoEstadoTransitorio)
    Public Overridable Property TipoFuncionario() As DbSet(Of TipoFuncionario)
    Public Overridable Property TipoLicencia() As DbSet(Of TipoLicencia)
    Public Overridable Property TipoNotificacion() As DbSet(Of TipoNotificacion)
    Public Overridable Property TipoViatico() As DbSet(Of TipoViatico)
    Public Overridable Property TrasladoDetalle() As DbSet(Of TrasladoDetalle)
    Public Overridable Property Turno() As DbSet(Of Turno)
    Public Overridable Property Usuario() As DbSet(Of Usuario)
    Public Overridable Property vw_EstadosTransitoriosCompletos() As DbSet(Of vw_EstadosTransitoriosCompletos)
    Public Overridable Property vw_FuncionarioEstadosActivos() As DbSet(Of vw_FuncionarioEstadosActivos)
    Public Overridable Property vw_FuncionarioEstadosConsolidados() As DbSet(Of vw_FuncionarioEstadosConsolidados)
    Public Overridable Property vw_FuncionarioSituacionActual() As DbSet(Of vw_FuncionarioSituacionActual)
    Public Overridable Property vw_LicenciasCompletas() As DbSet(Of vw_LicenciasCompletas)
    Public Overridable Property vw_LicenciasConFuncionario() As DbSet(Of vw_LicenciasConFuncionario)
    Public Overridable Property vw_NotificacionesCompletas() As DbSet(Of vw_NotificacionesCompletas)
    Public Overridable Property vw_NovedadesAgrupadas() As DbSet(Of vw_NovedadesAgrupadas)
    Public Overridable Property vw_NovedadesCompletas() As DbSet(Of vw_NovedadesCompletas)
    Public Overridable Property vw_SancionesCompletas() As DbSet(Of vw_SancionesCompletas)

    Public Overridable Function sp_alterdiagram(diagramname As String, owner_id As Nullable(Of Integer), version As Nullable(Of Integer), definition As Byte()) As Integer
        Dim diagramnameParameter As ObjectParameter = If(diagramname IsNot Nothing, New ObjectParameter("diagramname", diagramname), New ObjectParameter("diagramname", GetType(String)))

        Dim owner_idParameter As ObjectParameter = If(owner_id.HasValue, New ObjectParameter("owner_id", owner_id), New ObjectParameter("owner_id", GetType(Integer)))

        Dim versionParameter As ObjectParameter = If(version.HasValue, New ObjectParameter("version", version), New ObjectParameter("version", GetType(Integer)))

        Dim definitionParameter As ObjectParameter = If(definition IsNot Nothing, New ObjectParameter("definition", definition), New ObjectParameter("definition", GetType(Byte())))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter)
    End Function

    Public Overridable Function sp_creatediagram(diagramname As String, owner_id As Nullable(Of Integer), version As Nullable(Of Integer), definition As Byte()) As Integer
        Dim diagramnameParameter As ObjectParameter = If(diagramname IsNot Nothing, New ObjectParameter("diagramname", diagramname), New ObjectParameter("diagramname", GetType(String)))

        Dim owner_idParameter As ObjectParameter = If(owner_id.HasValue, New ObjectParameter("owner_id", owner_id), New ObjectParameter("owner_id", GetType(Integer)))

        Dim versionParameter As ObjectParameter = If(version.HasValue, New ObjectParameter("version", version), New ObjectParameter("version", GetType(Integer)))

        Dim definitionParameter As ObjectParameter = If(definition IsNot Nothing, New ObjectParameter("definition", definition), New ObjectParameter("definition", GetType(Byte())))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter)
    End Function

    Public Overridable Function sp_dropdiagram(diagramname As String, owner_id As Nullable(Of Integer)) As Integer
        Dim diagramnameParameter As ObjectParameter = If(diagramname IsNot Nothing, New ObjectParameter("diagramname", diagramname), New ObjectParameter("diagramname", GetType(String)))

        Dim owner_idParameter As ObjectParameter = If(owner_id.HasValue, New ObjectParameter("owner_id", owner_id), New ObjectParameter("owner_id", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter)
    End Function

    Public Overridable Function sp_helpdiagramdefinition(diagramname As String, owner_id As Nullable(Of Integer)) As ObjectResult(Of sp_helpdiagramdefinition_Result)
        Dim diagramnameParameter As ObjectParameter = If(diagramname IsNot Nothing, New ObjectParameter("diagramname", diagramname), New ObjectParameter("diagramname", GetType(String)))

        Dim owner_idParameter As ObjectParameter = If(owner_id.HasValue, New ObjectParameter("owner_id", owner_id), New ObjectParameter("owner_id", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_helpdiagramdefinition_Result)("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter)
    End Function

    Public Overridable Function sp_helpdiagrams(diagramname As String, owner_id As Nullable(Of Integer)) As ObjectResult(Of sp_helpdiagrams_Result)
        Dim diagramnameParameter As ObjectParameter = If(diagramname IsNot Nothing, New ObjectParameter("diagramname", diagramname), New ObjectParameter("diagramname", GetType(String)))

        Dim owner_idParameter As ObjectParameter = If(owner_id.HasValue, New ObjectParameter("owner_id", owner_id), New ObjectParameter("owner_id", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_helpdiagrams_Result)("sp_helpdiagrams", diagramnameParameter, owner_idParameter)
    End Function

    Public Overridable Function sp_renamediagram(diagramname As String, owner_id As Nullable(Of Integer), new_diagramname As String) As Integer
        Dim diagramnameParameter As ObjectParameter = If(diagramname IsNot Nothing, New ObjectParameter("diagramname", diagramname), New ObjectParameter("diagramname", GetType(String)))

        Dim owner_idParameter As ObjectParameter = If(owner_id.HasValue, New ObjectParameter("owner_id", owner_id), New ObjectParameter("owner_id", GetType(Integer)))

        Dim new_diagramnameParameter As ObjectParameter = If(new_diagramname IsNot Nothing, New ObjectParameter("new_diagramname", new_diagramname), New ObjectParameter("new_diagramname", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter)
    End Function

    Public Overridable Function sp_upgraddiagrams() As Integer
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_upgraddiagrams")
    End Function

    Public Overridable Function usp_Apex_ImportarAgregadosMensuales(tipoHistorico As String, registrosAfectados As ObjectParameter) As Integer
        Dim tipoHistoricoParameter As ObjectParameter = If(tipoHistorico IsNot Nothing, New ObjectParameter("TipoHistorico", tipoHistorico), New ObjectParameter("TipoHistorico", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_Apex_ImportarAgregadosMensuales", tipoHistoricoParameter, registrosAfectados)
    End Function

    Public Overridable Function usp_Apex_ImportarDotacionFuncionario() As Integer
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_Apex_ImportarDotacionFuncionario")
    End Function

    Public Overridable Function usp_Apex_ImportarLicenciasMasivas(registrosAfectados As ObjectParameter) As Integer
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_Apex_ImportarLicenciasMasivas", registrosAfectados)
    End Function

    Public Overridable Function usp_DeleteFuncionario(funcionarioId As Nullable(Of Integer)) As Integer
        Dim funcionarioIdParameter As ObjectParameter = If(funcionarioId.HasValue, New ObjectParameter("FuncionarioId", funcionarioId), New ObjectParameter("FuncionarioId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_DeleteFuncionario", funcionarioIdParameter)
    End Function

    Public Overridable Function usp_Filtros_ObtenerLicenciasPorFecha(fechaInicio As Nullable(Of Date), fechaFin As Nullable(Of Date), filtroNombre As String, tiposLicenciaIds As String, soloActivos As Nullable(Of Boolean)) As ObjectResult(Of usp_Filtros_ObtenerLicenciasPorFecha_Result)
        Dim fechaInicioParameter As ObjectParameter = If(fechaInicio.HasValue, New ObjectParameter("FechaInicio", fechaInicio), New ObjectParameter("FechaInicio", GetType(Date)))

        Dim fechaFinParameter As ObjectParameter = If(fechaFin.HasValue, New ObjectParameter("FechaFin", fechaFin), New ObjectParameter("FechaFin", GetType(Date)))

        Dim filtroNombreParameter As ObjectParameter = If(filtroNombre IsNot Nothing, New ObjectParameter("FiltroNombre", filtroNombre), New ObjectParameter("FiltroNombre", GetType(String)))

        Dim tiposLicenciaIdsParameter As ObjectParameter = If(tiposLicenciaIds IsNot Nothing, New ObjectParameter("TiposLicenciaIds", tiposLicenciaIds), New ObjectParameter("TiposLicenciaIds", GetType(String)))

        Dim soloActivosParameter As ObjectParameter = If(soloActivos.HasValue, New ObjectParameter("SoloActivos", soloActivos), New ObjectParameter("SoloActivos", GetType(Boolean)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_Filtros_ObtenerLicenciasPorFecha_Result)("usp_Filtros_ObtenerLicenciasPorFecha", fechaInicioParameter, fechaFinParameter, filtroNombreParameter, tiposLicenciaIdsParameter, soloActivosParameter)
    End Function

    Public Overridable Function usp_LimpiarDatosDeApex() As Integer
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_LimpiarDatosDeApex")
    End Function

    Public Overridable Function usp_MigrarDotacionesCompletas() As Integer
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_MigrarDotacionesCompletas")
    End Function

    Public Overridable Function usp_PresenciaFecha_Apex(fecha As Nullable(Of Date)) As ObjectResult(Of usp_PresenciaFecha_Apex_Result)
        Dim fechaParameter As ObjectParameter = If(fecha.HasValue, New ObjectParameter("Fecha", fecha), New ObjectParameter("Fecha", GetType(Date)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of usp_PresenciaFecha_Apex_Result)("usp_PresenciaFecha_Apex", fechaParameter)
    End Function

    Public Overridable Function usp_ProcesarEstadoNotificaciones() As Integer
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("usp_ProcesarEstadoNotificaciones")
    End Function

End Class
